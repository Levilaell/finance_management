# Generated by Django 4.2.16 on 2025-05-29 18:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('banking', '0001_initial'),
        ('companies', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoryRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='rule name')),
                ('rule_type', models.CharField(choices=[('keyword', 'Palavra-chave'), ('amount_range', 'Faixa de valor'), ('counterpart', 'Contrapartida'), ('pattern', 'Padrão regex'), ('ai_prediction', 'Predição IA')], max_length=20, verbose_name='rule type')),
                ('conditions', models.JSONField(default=dict, verbose_name='conditions')),
                ('priority', models.IntegerField(default=0, help_text='Higher priority rules are applied first', verbose_name='priority')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('confidence_threshold', models.FloatField(default=0.8, verbose_name='confidence threshold')),
                ('match_count', models.IntegerField(default=0, verbose_name='match count')),
                ('accuracy_rate', models.FloatField(default=0.0, verbose_name='accuracy rate')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rules', to='banking.transactioncategory')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_rules', to='companies.company')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_rules', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Category Rule',
                'verbose_name_plural': 'Category Rules',
                'db_table': 'category_rules',
                'ordering': ['-priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='CategorizationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(choices=[('ai', 'AI Prediction'), ('rule', 'Rule Based'), ('manual', 'Manual'), ('bulk', 'Bulk Operation'), ('recurring', 'Recurring Pattern')], max_length=20, verbose_name='categorization method')),
                ('confidence_score', models.FloatField(default=0.0, verbose_name='confidence score')),
                ('processing_time_ms', models.IntegerField(default=0, verbose_name='processing time (ms)')),
                ('ai_model_version', models.CharField(blank=True, max_length=50, verbose_name='AI model version')),
                ('was_accepted', models.BooleanField(default=False, verbose_name='was accepted')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('final_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='final_categorization_logs', to='banking.transactioncategory')),
                ('rule_used', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='categories.categoryrule')),
                ('suggested_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categorization_logs', to='banking.transactioncategory')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categorization_logs', to='banking.transaction')),
            ],
            options={
                'verbose_name': 'Categorization Log',
                'verbose_name_plural': 'Categorization Logs',
                'db_table': 'categorization_logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CategorySuggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confidence_score', models.FloatField(verbose_name='confidence score')),
                ('alternative_suggestions', models.JSONField(default=list, verbose_name='alternative suggestions')),
                ('model_version', models.CharField(max_length=50, verbose_name='model version')),
                ('features_used', models.JSONField(default=list, verbose_name='features used')),
                ('is_accepted', models.BooleanField(default=False, verbose_name='is accepted')),
                ('is_rejected', models.BooleanField(default=False, verbose_name='is rejected')),
                ('user_feedback', models.TextField(blank=True, verbose_name='user feedback')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('reviewed_at', models.DateTimeField(blank=True, null=True, verbose_name='reviewed at')),
                ('reviewed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_suggestions', to=settings.AUTH_USER_MODEL)),
                ('suggested_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_suggestions', to='banking.transactioncategory')),
                ('transaction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ai_suggestion', to='banking.transaction')),
            ],
            options={
                'verbose_name': 'Category Suggestion',
                'verbose_name_plural': 'Category Suggestions',
                'db_table': 'category_suggestions',
                'indexes': [models.Index(fields=['is_accepted', 'is_rejected'], name='category_su_is_acce_6d676f_idx'), models.Index(fields=['confidence_score'], name='category_su_confide_6735cf_idx')],
            },
        ),
        migrations.CreateModel(
            name='CategoryPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_predictions', models.IntegerField(default=0, verbose_name='total predictions')),
                ('correct_predictions', models.IntegerField(default=0, verbose_name='correct predictions')),
                ('false_positives', models.IntegerField(default=0, verbose_name='false positives')),
                ('false_negatives', models.IntegerField(default=0, verbose_name='false negatives')),
                ('accuracy', models.FloatField(default=0.0, verbose_name='accuracy')),
                ('precision', models.FloatField(default=0.0, verbose_name='precision')),
                ('recall', models.FloatField(default=0.0, verbose_name='recall')),
                ('f1_score', models.FloatField(default=0.0, verbose_name='F1 score')),
                ('period_start', models.DateField(verbose_name='period start')),
                ('period_end', models.DateField(verbose_name='period end')),
                ('calculated_at', models.DateTimeField(auto_now_add=True, verbose_name='calculated at')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_metrics', to='banking.transactioncategory')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_performance', to='companies.company')),
            ],
            options={
                'verbose_name': 'Category Performance',
                'verbose_name_plural': 'Category Performance',
                'db_table': 'category_performance',
                'unique_together': {('company', 'category', 'period_start', 'period_end')},
            },
        ),
        migrations.CreateModel(
            name='AITrainingData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=500, verbose_name='transaction description')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='amount')),
                ('transaction_type', models.CharField(max_length=20, verbose_name='transaction type')),
                ('counterpart_name', models.CharField(blank=True, max_length=200, verbose_name='counterpart name')),
                ('is_verified', models.BooleanField(default=False, verbose_name='is verified')),
                ('verification_source', models.CharField(choices=[('manual', 'Manual Review'), ('user_feedback', 'User Feedback'), ('rule_based', 'Rule Based'), ('ai_confident', 'AI High Confidence')], default='manual', max_length=20, verbose_name='verification source')),
                ('extracted_features', models.JSONField(default=dict, verbose_name='extracted features')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_data', to='banking.transactioncategory')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_training_data', to='companies.company')),
                ('subcategory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategory_training_data', to='banking.transactioncategory')),
                ('verified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_training_data', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AI Training Data',
                'verbose_name_plural': 'AI Training Data',
                'db_table': 'ai_training_data',
                'indexes': [models.Index(fields=['company', 'category'], name='ai_training_company_c3f3c0_idx'), models.Index(fields=['is_verified'], name='ai_training_is_veri_957da8_idx')],
            },
        ),
    ]
