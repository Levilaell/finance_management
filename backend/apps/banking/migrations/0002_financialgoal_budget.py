# Generated by Django 4.2.16 on 2025-05-30 03:08

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('companies', '0001_initial'),
        ('banking', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FinancialGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='goal name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('goal_type', models.CharField(choices=[('savings', 'Poupança'), ('debt_reduction', 'Redução de Dívida'), ('expense_reduction', 'Redução de Gastos'), ('income_increase', 'Aumento de Renda'), ('emergency_fund', 'Reserva de Emergência'), ('investment', 'Investimento'), ('custom', 'Personalizado')], max_length=20, verbose_name='goal type')),
                ('target_amount', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='target amount')),
                ('current_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, verbose_name='current amount')),
                ('target_date', models.DateField(verbose_name='target date')),
                ('monthly_target', models.DecimalField(blank=True, decimal_places=2, help_text='Monthly amount needed to reach goal', max_digits=15, null=True, verbose_name='monthly target')),
                ('status', models.CharField(choices=[('active', 'Ativo'), ('completed', 'Concluído'), ('paused', 'Pausado'), ('cancelled', 'Cancelado')], default='active', max_length=20, verbose_name='status')),
                ('is_automatic_tracking', models.BooleanField(default=True, verbose_name='automatic tracking')),
                ('send_reminders', models.BooleanField(default=True, verbose_name='send reminders')),
                ('reminder_frequency', models.IntegerField(default=7, verbose_name='reminder frequency (days)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='completed at')),
                ('bank_accounts', models.ManyToManyField(blank=True, help_text='Accounts to track for this goal', related_name='financial_goals', to='banking.bankaccount')),
                ('categories', models.ManyToManyField(blank=True, help_text='Categories related to this goal', related_name='financial_goals', to='banking.transactioncategory')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='financial_goals', to='companies.company')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_goals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Financial Goal',
                'verbose_name_plural': 'Financial Goals',
                'db_table': 'financial_goals',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='budget name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('budget_type', models.CharField(choices=[('monthly', 'Mensal'), ('weekly', 'Semanal'), ('yearly', 'Anual'), ('custom', 'Personalizado')], default='monthly', max_length=20, verbose_name='budget type')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='budget amount')),
                ('spent_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, verbose_name='spent amount')),
                ('start_date', models.DateField(verbose_name='start date')),
                ('end_date', models.DateField(verbose_name='end date')),
                ('alert_threshold', models.IntegerField(default=80, help_text='Send alert when this percentage of budget is reached', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='alert threshold (%)')),
                ('is_alert_enabled', models.BooleanField(default=True, verbose_name='enable alerts')),
                ('last_alert_sent', models.DateTimeField(blank=True, null=True, verbose_name='last alert sent')),
                ('status', models.CharField(choices=[('active', 'Ativo'), ('inactive', 'Inativo'), ('exceeded', 'Excedido'), ('paused', 'Pausado')], default='active', max_length=20, verbose_name='status')),
                ('is_rollover', models.BooleanField(default=False, verbose_name='rollover unused budget')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('categories', models.ManyToManyField(blank=True, help_text='Categories included in this budget', related_name='budgets', to='banking.transactioncategory')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='budgets', to='companies.company')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_budgets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Budget',
                'verbose_name_plural': 'Budgets',
                'db_table': 'budgets',
                'ordering': ['-created_at'],
            },
        ),
    ]
