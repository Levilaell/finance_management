# Generated by Django 4.2.16 on 2025-05-29 18:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='plan name')),
                ('slug', models.SlugField(unique=True, verbose_name='slug')),
                ('plan_type', models.CharField(choices=[('starter', 'Starter'), ('pro', 'Pro'), ('enterprise', 'Enterprise')], max_length=20, verbose_name='plan type')),
                ('price_monthly', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='monthly price')),
                ('price_yearly', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='yearly price')),
                ('max_transactions', models.IntegerField(default=500, verbose_name='max transactions per month')),
                ('max_bank_accounts', models.IntegerField(default=1, verbose_name='max bank accounts')),
                ('max_users', models.IntegerField(default=1, verbose_name='max users')),
                ('has_ai_categorization', models.BooleanField(default=True, verbose_name='AI categorization')),
                ('has_advanced_reports', models.BooleanField(default=False, verbose_name='advanced reports')),
                ('has_api_access', models.BooleanField(default=False, verbose_name='API access')),
                ('has_accountant_access', models.BooleanField(default=False, verbose_name='accountant access')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
            ],
            options={
                'verbose_name': 'Subscription Plan',
                'verbose_name_plural': 'Subscription Plans',
                'db_table': 'subscription_plans',
                'ordering': ['price_monthly'],
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='company name')),
                ('trade_name', models.CharField(blank=True, max_length=200, verbose_name='trade name')),
                ('cnpj', models.CharField(blank=True, max_length=18, null=True, unique=True, verbose_name='CNPJ')),
                ('company_type', models.CharField(choices=[('mei', 'Microempreendedor Individual'), ('me', 'Microempresa'), ('epp', 'Empresa de Pequeno Porte'), ('ltda', 'Sociedade Limitada'), ('sa', 'Sociedade Anônima'), ('other', 'Outro')], max_length=20, verbose_name='company type')),
                ('business_sector', models.CharField(choices=[('retail', 'Comércio'), ('services', 'Serviços'), ('industry', 'Indústria'), ('construction', 'Construção'), ('agriculture', 'Agricultura'), ('technology', 'Tecnologia'), ('healthcare', 'Saúde'), ('education', 'Educação'), ('food', 'Alimentação'), ('beauty', 'Beleza'), ('automotive', 'Automotivo'), ('real_estate', 'Imobiliário'), ('consulting', 'Consultoria'), ('other', 'Outro')], max_length=50, verbose_name='business sector')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='company email')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='phone')),
                ('website', models.URLField(blank=True, verbose_name='website')),
                ('address_street', models.CharField(blank=True, max_length=200, verbose_name='street')),
                ('address_number', models.CharField(blank=True, max_length=20, verbose_name='number')),
                ('address_complement', models.CharField(blank=True, max_length=100, verbose_name='complement')),
                ('address_neighborhood', models.CharField(blank=True, max_length=100, verbose_name='neighborhood')),
                ('address_city', models.CharField(blank=True, max_length=100, verbose_name='city')),
                ('address_state', models.CharField(blank=True, max_length=2, verbose_name='state')),
                ('address_zipcode', models.CharField(blank=True, max_length=10, verbose_name='ZIP code')),
                ('monthly_revenue', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='monthly revenue')),
                ('employee_count', models.IntegerField(default=1, verbose_name='employee count')),
                ('subscription_status', models.CharField(choices=[('trial', 'Trial'), ('active', 'Active'), ('past_due', 'Past Due'), ('cancelled', 'Cancelled'), ('suspended', 'Suspended')], default='trial', max_length=20, verbose_name='subscription status')),
                ('trial_ends_at', models.DateTimeField(blank=True, null=True, verbose_name='trial ends at')),
                ('next_billing_date', models.DateField(blank=True, null=True, verbose_name='next billing date')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='company_logos/', verbose_name='logo')),
                ('primary_color', models.CharField(default='#3B82F6', max_length=7, verbose_name='primary color')),
                ('currency', models.CharField(default='BRL', max_length=3, verbose_name='currency')),
                ('fiscal_year_start', models.CharField(choices=[('01', '01'), ('02', '02'), ('03', '03'), ('04', '04'), ('05', '05'), ('06', '06'), ('07', '07'), ('08', '08'), ('09', '09'), ('10', '10'), ('11', '11'), ('12', '12')], default='01', max_length=2, verbose_name='fiscal year start')),
                ('enable_ai_categorization', models.BooleanField(default=True, verbose_name='enable AI categorization')),
                ('auto_categorize_threshold', models.FloatField(default=0.8, verbose_name='auto categorize threshold')),
                ('enable_notifications', models.BooleanField(default=True, verbose_name='enable notifications')),
                ('enable_email_reports', models.BooleanField(default=True, verbose_name='enable email reports')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='company', to=settings.AUTH_USER_MODEL)),
                ('subscription_plan', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='companies', to='companies.subscriptionplan')),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
                'db_table': 'companies',
            },
        ),
        migrations.CreateModel(
            name='CompanyUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('owner', 'Proprietário'), ('admin', 'Administrador'), ('manager', 'Gerente'), ('accountant', 'Contador'), ('viewer', 'Visualizador')], max_length=20, verbose_name='role')),
                ('permissions', models.JSONField(default=dict, verbose_name='permissions')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('invited_at', models.DateTimeField(auto_now_add=True, verbose_name='invited at')),
                ('joined_at', models.DateTimeField(blank=True, null=True, verbose_name='joined at')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_users', to='companies.company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Company User',
                'verbose_name_plural': 'Company Users',
                'db_table': 'company_users',
                'unique_together': {('company', 'user')},
            },
        ),
    ]
